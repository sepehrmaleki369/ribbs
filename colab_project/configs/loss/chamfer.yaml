# Mixed Topological Loss Configuration

# Primary loss (used from the beginning)
primary_loss:
  # path: "losses.chamfer_loss"
  # class: "SDFChamferLoss"
  # params:
  #   weight_sdf:          1.0
  #   band:                0          # disable band filtering (or e.g. 3.0)
  #   use_squared:         false      # L2² vs. L2 distances
  #   update_scale:        1.0        # strength of the pseudo‑gradient
  #   normalize_normals:   true       # unit‑norm before projection
  #   iso:                 0.0        # iso‐surface value
  #   eps:                 1e-3       # width for capturing exact zeros

  path: losses.shape_loss
  class: ShapeLoss
  params:
    chamfer_weight: 1.0
    occupancy_weight: 2.0
    eikonal_weight: 0.05
    occ_band: 1.5
    softplus_beta: 1.0
    softplus_threshold: 10.0
    pad_width: 1
    contour_level: 0.0

  # path: "losses.weighted_mse"
  # class: "WeightedMSELoss"
  # params:
  #   road_weight: 4
  #   bg_weight: 1
  #   threshold: 0
  #   greater_is_road: False
  #   reduction: mean

  # class: "MSELoss"  # Built-in PyTorch loss
  # params: {}

# # Secondary loss (activated after start_epoch)
# secondary_loss:
#   path: "losses.chamfer_class"  # Path to the module containing the loss
#   class: "ChamferBoundarySDFLoss"  # Name of the loss class
#   params:
#     update_scale: 1.0     # scale applied to the gradient projection
#     dist_threshold: 3.0   # max distance (in pixels) to consider a match
#     chamfer_weight: 1.0         # weight for the “inject” term
#     pixel_weight: 1.0          # weight for the “pixel” term

## Mixing parameters
alpha: 1  # Weight for the secondary loss 
start_epoch: 0  # Epoch to start using the secondary loss



 